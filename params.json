{"name":"Spectator","body":"## The gist\r\n\r\nSpectator is a simple watcher for your specs:\r\n- it will execute a spec each time a file (spec or implementation) is modified or created (_really catches new files!_)\r\n- it **does not** starts your whole suite at start, nor when a spec passes or fails (as autospec tends to do)\r\n- _if you ask_ it runs the whole spec suite\r\n\r\n> Started as a custom [Watchr](https://github.com/mynyml/watchr) script **Spectator** has grown up to a tiny gem!\r\n\r\n### Compatibility\r\n\r\nWorks with RSpec-1 and RSpec-2 (looks for a `.rspec` file in the project root).\r\n\r\n\r\n## Usage\r\n\r\nLaunch `spectator` in a terminal and go back to code!\r\n\r\nThe normal behavior is similar to `autotest --fast-start --no-full-after-failed` \r\nbut gives the user a bit more control over execution. By hitting CTRL+C (or CMD+. on OSX)\r\nyou get the following prompt:\r\n\r\n    ^C (Interrupted with CTRL+C)\r\n    --- What to do now? (q=quit, a=all-specs): \r\n\r\nType `q` and `ENTER` (or `CTRL+C` again) to quit.\r\n\r\nType `a` and `ENTER` (or `CTRL+C` again) to execute the whole suite of specs.\r\n\r\n\r\n## Advanced (upcoming!)\r\n\r\nIf you want to override some path matching:\r\n\r\n```ruby\r\nspectate do\r\n  case path\r\n  when %r{lib/calibration_with_coefficients}\r\n    specs.grep(%r{models/(logarithmic|polynomial)_calibration})\r\n  when %r{app/models/telemetry_parameter}\r\n    specs.grep(%r{models/telemetry_parameter})\r\n  end\r\nend\r\n```\r\n\r\n\r\n\r\nCopyright Â© 2011-2012 Elia Schito, released under the [MIT license](https://github.com/elia/spectator/blob/master/MIT-LICENSE)\r\n","tagline":"Test driven development red-green cycle for simple people!","google":"UA-7137430-8","note":"Don't delete this file! It's used internally to help with page regeneration."}